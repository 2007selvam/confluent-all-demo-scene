SET 'auto.offset.reset' = 'earliest';

CREATE STREAM PIZZA_ORDERS
(
    storeNumber INT,
    storeOrderId INT,
    businessDate STRING,
    status STRING,
    coupons ARRAY<
                STRUCT<code int>
                >,
    orderLines ARRAY<
                STRUCT<
                        product_id INT,
                        category STRING,
                        quantity INT,
                        unit_price DECIMAL(10,2),
                        net_price DECIMAL(10,2)
                    >
                >
)
WITH (
    KAFKA_TOPIC = 'pizza_orders',
    VALUE_FORMAT = 'JSON'
);

CREATE STREAM PIZZA_ORDERS_COMPLETED
(
    storeNumber INT,
    storeOrderId INT,
    businessDate STRING,
    status STRING,
    rackTimeSecs INT,
    orderDeliveryTimeSecs INT
)
WITH (
    KAFKA_TOPIC = 'pizza_orders_completed',
    VALUE_FORMAT = 'JSON'
);

CREATE STREAM PIZZA_ORDERS_CANCELLED
(
    storeNumber INT,
    storeOrderId INT,
    businessDate STRING,
    status STRING
)
WITH (
    KAFKA_TOPIC = 'pizza_orders_cancelled',
    VALUE_FORMAT = 'JSON'
);

--Rekey and convert to AVRO
CREATE STREAM PIZZA_ORDERS_KEYED
WITH (
    KAFKA_TOPIC = 'pizza_orders_keyed',
    VALUE_FORMAT = 'AVRO'
)
AS
SELECT 
CAST(storeNumber AS STRING) + '-' + CAST(storeOrderId AS STRING) + '-' + businessDate AS order_key,
storeNumber,
storeOrderId,
businessDate,
status,
coupons,
orderLines
FROM PIZZA_ORDERS
PARTITION BY (CAST(storeNumber AS STRING) + '-' + CAST(storeOrderId AS STRING) + '-' + businessDate);

CREATE STREAM PIZZA_ORDERS_COMPLETED_KEYED
WITH (
    KAFKA_TOPIC = 'pizza_orders_completed_keyed',
    VALUE_FORMAT = 'AVRO'
)
AS
SELECT 
CAST(storeNumber AS STRING) + '-' + CAST(storeOrderId AS STRING) + '-' + businessDate AS order_key,
storeNumber,
storeOrderId,
businessDate,
status,
rackTimeSecs,
orderDeliveryTimeSecs
FROM PIZZA_ORDERS_COMPLETED
PARTITION BY (CAST(storeNumber AS STRING) + '-' + CAST(storeOrderId AS STRING) + '-' + businessDate);


CREATE STREAM PIZZA_ORDERS_CANCELLED_KEYED
WITH (
    KAFKA_TOPIC = 'pizza_orders_cancelled_keyed',
    VALUE_FORMAT = 'AVRO'
)
AS
SELECT 
CAST(storeNumber AS STRING) + '-' + CAST(storeOrderId AS STRING) + '-' + businessDate AS order_key,
storeNumber,
storeOrderId,
businessDate,
status
FROM PIZZA_ORDERS_CANCELLED
PARTITION BY (CAST(storeNumber AS STRING) + '-' + CAST(storeOrderId AS STRING) + '-' + businessDate);

CREATE STREAM PIZZA_ORDERS_COMMON
WITH (
    KAFKA_TOPIC = 'pizza_orders_common',
    VALUE_FORMAT = 'AVRO'
)
AS
SELECT
order_key,
storeNumber,
storeOrderId,
businessDate,
status,
CASE
    WHEN ARRAY_LENGTH(coupons) > 0 THEN 'true'
    ELSE 'false'
END AS usedCoupon,
ARRAY_LENGTH(orderLines) AS orderLineCount,
0 AS rackTimeSecs,
0 AS orderDeliveryTimeSecs
FROM PIZZA_ORDERS_KEYED;

INSERT INTO PIZZA_ORDERS_COMMON
SELECT
order_key AS order_key,
storeNumber AS storeNumber,
storeOrderId AS storeOrderId,
businessDate AS businessDate,
status AS status,
CAST(NULL AS STRING) AS usedCoupon,
CAST(NULL AS INT) AS orderLineCount,
CAST(NULL AS INT) AS rackTimeSecs,
CAST(NULL AS INT) AS orderDeliveryTimeSecs
FROM PIZZA_ORDERS_CANCELLED_KEYED;


INSERT INTO PIZZA_ORDERS_COMMON
SELECT
order_key AS order_key,
storeNumber AS storeNumber,
storeOrderId AS storeOrderId,
businessDate AS businessDate,
status AS status,
CAST(NULL AS STRING) AS usedCoupon,
CAST(NULL AS INT) AS orderLineCount,
rackTimeSecs AS rackTimeSecs,
orderDeliveryTimeSecs AS orderDeliveryTimeSecs
FROM PIZZA_ORDERS_COMPLETED_KEYED;


CREATE TABLE PIZZA_ORDERS_TABLE
WITH (
    KAFKA_TOPIC = 'pizza_orders_table',
    VALUE_FORMAT = 'AVRO'
)
AS
SELECT
order_key,
LATEST_BY_OFFSET(storeNumber) AS latest_storeNumber,
LATEST_BY_OFFSET(storeOrderId) AS latest_storeOrderId,
LATEST_BY_OFFSET(businessDate) AS latest_businessDate,
LATEST_BY_OFFSET(status) AS latest_status,
LATEST_BY_OFFSET(usedCoupon) AS latest_usedCoupon,
LATEST_BY_OFFSET(orderLineCount) AS latest_orderLineCount,
LATEST_BY_OFFSET(rackTimeSecs) AS latest_rackTimeSecs,
LATEST_BY_OFFSET(orderDeliveryTimeSecs) AS latest_orderDeliveryTimeSecs
FROM PIZZA_ORDERS_COMMON
WINDOW SESSION(30 MINUTES)
GROUP BY order_key;

--This section creates event from the order lines detail
--and flattens the products out to a easy to consume model.
CREATE STREAM PIZZA_ORDER_LINES
WITH (
    KAFKA_TOPIC = 'pizza_order_lines',
    VALUE_FORMAT = 'AVRO'
)
AS
SELECT 
order_key,
storeNumber,
storeOrderId,
businessDate,
EXPLODE(orderLines) AS orderLine
FROM PIZZA_ORDERS_KEYED;

CREATE STREAM PIZZA_ORDER_LINES_FLAT
WITH (
    KAFKA_TOPIC = 'pizza_order_lines_flat',
    VALUE_FORMAT = 'AVRO'
)
AS
SELECT 
order_key,
storeNumber,
storeOrderId,
businessDate,
orderLine->product_id AS product_id,
orderLine->category AS category,
orderLine->quantity AS quantity,
orderLine->unit_price AS unit_price,
orderLine->net_price AS net_price
FROM PIZZA_ORDER_LINES; 